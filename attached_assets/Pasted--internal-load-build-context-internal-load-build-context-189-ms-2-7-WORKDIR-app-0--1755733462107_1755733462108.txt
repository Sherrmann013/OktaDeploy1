[internal] load build context

[internal] load build context  ✔ 189 ms

[2/7] WORKDIR /app  ✔ 0 ms – CACHED

[3/7] COPY package*.json ./  ✔ 0 ms – CACHED

[4/7] RUN npm ci  ✔ 0 ms – CACHED

[5/7] COPY . .

[5/7] COPY . .  ✔ 122 ms

[6/7] RUN npm run build


> rest-express@1.0.0 build
> vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist


vite v5.4.14 building for production...

transforming...

Browserslist: browsers data (caniuse-lite) is 10 months old. Please run:
  npx update-browserslist-db@latest
  Why you should do it regularly: https://github.com/browserslist/update-db#readme

✓ 3016 modules transformed.

rendering chunks...

computing gzip size...

../dist/public/index.html                     0.63 kB │ gzip:   0.38 kB

../dist/public/assets/index-DjFRC8N7.css     95.99 kB │ gzip:  15.15 kB

../dist/public/assets/index-BXsFmyf3.js   1,360.84 kB │ gzip: 367.39 kB


(!) Some chunks are larger than 500 kB after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.

✓ built in 8.57s


  dist/index.js  411.4kb

⚡ Done in 23ms

[6/7] RUN npm run build  ✔ 9 sec

[7/7] RUN npm prune --production

npm warn config production Use `--omit=dev` instead.


up to date, audited 450 packages in 1s



61 packages are looking for funding
  run `npm fund` for details


3 low severity vulnerabilities

To address all issues, run:
  npm audit fix

Run `npm audit` for details.

[7/7] RUN npm prune --production  ✔ 1 sec

exporting to docker image format

exporting to image

[auth] sharing credentials for production-us-west2.railway-registry.com

[auth] sharing credentials for production-us-west2.railway-registry.com  ✔ 0 ms

importing to docker

importing to docker  ✔ 7 sec

Build time: 29.08 seconds

 

====================

Starting Healthcheck

====================


Path: /health

Retry window: 5m0s

 

Attempt #1 failed with service unavailable. Continuing to retry for 4m58s

Attempt #2 failed with service unavailable. Continuing to retry for 4m57s

Attempt #3 failed with service unavailable. Continuing to retry for 4m45s

Attempt #4 failed with service unavailable. Continuing to retry for 4m41s

Attempt #5 failed with service unavailable. Continuing to retry for 4m29s